//AS3///////////////////////////////////////////////////////////////////////////// // Copyright 2010 Maxsquatch// ////////////////////////////////////////////////////////////////////////////////package com.oomph{		internal class PropertyVO	{				private var _modifier:Function;												// Modifies the return easing value (bezier tween this)		private var _begVal:Number = new Number();		private var _changeVal:Number = new Number();		private var _endVal:Number = new Number();		private var _modifierParams:Object;		private var _oomphRegistrar:OomphRegistrar = OomphRegistrar.getInstance();		private var _propName:String = new String();				public function get modifier():Function { return _modifier };				public function set modifier(value:Function):void { _modifier = value };				public function get begVal():Number { return _begVal; }				public function set begVal(value:Number):void		{			_begVal = value;			_changeVal = _endVal - _begVal;		}				public function get endVal():Number { return _endVal; }				public function set endVal(value:Number):void		{			_endVal = value;			_changeVal = _endVal - _begVal;		}				public function get changeVal():Number { return _changeVal; }				public function set changeVal(value:Number):void {			_changeVal = value;		}				public function get modifierParams():Object { return _modifierParams };				public function set modifierParams(value:Object):void { _modifierParams = value };				public function get propName():String {			return _propName;		}				public function PropertyVO(propName:String, targObj:Object, endVal:Number):void {			_propName = propName;			if(targObj.hasOwnProperty(propName)) {				_begVal = targObj[propName];			} else {				switch(propName) {					case 'red':					if (targObj.transform.colorTransform) {						_begVal = targObj.transform.colorTransform.redOffset;					} else {						//_begVal = 0;					}					break;										case 'green':					if(targObj.transform.colorTransform) {						_begVal = targObj.transform.colorTransform.greenOffset;					} else {						//_begVal = 0;					}					break;										case 'blue':					if(targObj.transform.colorTransform) {						_begVal = targObj.transform.colorTransform.blueOffset;					} else {						//_begVal = 0;					}					break;										case 'frame':					_begVal = targObj.currentFrame;					break;										case 'tint':					_begVal = 0;					break;										default:					// If its a special property (angle, radius, etc.) it's begin value should be set by the TweenInfoObject					if(_oomphRegistrar.checkSpecialProp(propName)) _begVal = NaN;											break;				}			}									_endVal = endVal;			_changeVal = _endVal - _begVal;		}				public function reset():void {			_begVal = _begVal;			_endVal = _endVal;			_changeVal = _endVal - _begVal;		}				public function reverse(reverseEase:Boolean = false):void {			// Reverse the end and beginning values for yoyo functions			var temBeg:Number = _begVal;			var tempEnd:Number = _endVal;			_begVal = tempEnd;			_endVal = temBeg;			_changeVal = _endVal - _begVal;		}			}}